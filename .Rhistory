mixIndependX(g1,"\\|",10,10)
document()
document()
mixIndependK(g1,"\\|",10,10)
g1
devtools::install_github("mixIndependR")
x <- data.frame(STR1=c("12|12","13|14","13|13","14|15","15|13","13|14","14|13","12|12","14|14","15|15"),SNP1=c("A|A","T|T","A|T","A|T","T|A","A|T","A|A","T|A","T|T","A|T"))
AlleleFreq(x,sep = "\\|")
r
R
document()
devtools::build()
devtools::build()
devtools::build()
devtools::build()
document()
devtools::build()
devtools::check()
document()
devtools::check()
?read.table
document()
document()
document()
devtools::check()
document()
?read.table
document()
devtools::check()
document()
devtools::check()
document()
devtools::check()
document()
document()
devtools::check()
document()
document()
document()
devtools::check()
x <- data.frame(SNP1=c("A|A","T|T","A|T","A|T"),
STR1=c("12|12","13|14","13|13","14|15"))
G <-GenotypeFreq(x,expect = FALSE)
G0 <-GenotypeFreq(x)
G0 <-GenotypeFreq(x,expect = TRUE)
p <-AlleleFreq(x)
Gt_a<-as.data.frame(cbind(rbind(rownames(p),rownames(p)),combn(rownames(p),2),combn(sort(rownames(p),decreasing = T),2)))
Gt<-as.vector(sapply(Gt_a,function(x){paste0(x[1],"|",x[2])}))
Gt
ho<-p*p
p0<-data.frame(p)
he<-sapply(p0,function(x){combn(x,2)[1,]*combn(x,2)[2,]})
p0$index <- as.numeric(rownames(p))
rownames(p)
p0$index <- rownames(p)
p_hat<-p0[order(-p0$index),]
p_hat<-p0[sort(p0$index,decreasing = T),]
p_hat$index <- NULL
p_hat
p
he_verse <- sapply(p_hat,function(x){combn(x,2)[1,]*combn(x,2)[2,]})
output <-rbind(ho,he,he_verse)
p0$index <- rownames(p)
p_hat<-p0[sort(rownames(p),decreasing = T),]
p_hat
p0<-data.frame(p)
p_hat<-p0[sort(rownames(p),decreasing = T),]
p_hat
p
he_verse <- sapply(p_hat,function(x){combn(x,2)[1,]*combn(x,2)[2,]})
document()
x <- data.frame(SNP1=c("A|A","T|T","A|T","A|T"),
STR1=c("12|12","13|14","13|13","14|15"))
G <-GenotypeFreq(x,expect = FALSE)
G0 <-GenotypeFreq(x,expect = TRUE)
HWE.Chisq(G,G0,rescale.p=FALSE,simulate.p.value=TRUE,B=2000)
G
G0
document()
HWE.Chisq(G,G0,rescale.p=FALSE,simulate.p.value=TRUE,B=2000)
Chi_value <-function(x,x0,simulate.p.value=TRUE,B=2000,rescale.p=FALSE){
cr<-which(!x0==0)
output <- chisq.test(x[cr],x0[cr]*sum(x[cr]),simulate.p.value = simulate.p.value,B=B,rescale.p = rescale.p)
return(output$p.value)
}
mapply(Chi_value,G,G0,simulate.p.value=simulate.p.value,B=B,rescale.p=rescale.p)
mapply(Chi_value,G,G0,simulate.p.value=T,B=200,rescale.p=FALSE)
G
G[1]
which(!G[1]==0)
G[1][which(!G[1]==0)]
G[which(!G[1]==0),1]
G0[which(!G[1]==0),1]
G[which(!G0[1]==0),1]
G0[which(!G0[1]==0),1]
sum(G[which(!G0[1]==0),1])
chisq.test(G[which(!G0[1]==0),1],G0[which(!G0[1]==0),1])
chisq.test(c(1,1,2,0),c(0.25,0.25,0.25,0.25))
x <- data.frame(SNP1=rep(c("A|A","T|T","A|T","A|T"),4),
x <- data.frame(SNP1=rep(c("A|A","T|T","A|T","A|T"),4),
STR1=rep(c("12|12","13|14","13|13","14|15"),4))
x <- data.frame(SNP1=rep(c("A|A","T|T","A|T","A|T"),4),
STR1=rep(c("12|12","13|14","13|13","14|15"),4))
x
document()
G <-GenotypeFreq(x,expect = FALSE)
G0 <-GenotypeFreq(x)
HWE.Chisq(G,G0,rescale.p=FALSE,simulate.p.value=TRUE,B=2000)
G
x <- data.frame(SNP1=rep(c("A|A","T|T","A|T","A|T"),6),
STR1=rep(c("12|12","13|14","13|13","14|15"),6))
x <- data.frame(SNP1=rep(c("A|A","T|T","A|T","A|T"),6),
STR1=rep(c("12|12","13|14","13|13","14|15"),6))
G <-GenotypeFreq(x,expect = FALSE)
G0 <-GenotypeFreq(x)
HWE.Chisq(G,G0,rescale.p=FALSE,simulate.p.value=TRUE,B=2000)
g1
G <-GenotypeFreq(g1,expect = FALSE)
G0 <-GenotypeFreq(g1)
HWE.Chisq(G,G0,rescale.p=FALSE,simulate.p.value=TRUE,B=2000)
HWE.Chisq(G[1],G0[1],rescale.p=FALSE,simulate.p.value=TRUE,B=2000)
HWE.Chisq(G[[1]],G0[[1]],rescale.p=FALSE,simulate.p.value=TRUE,B=2000)
G[[1]]
G0[[1]]
cr <- which(!G0==0)
C[cr]
G[cr]
G[1][cr]
G[cr,1]
G[1]
cr
cr <- which(!G0[1]==0)
cr
G[cr,1]
G[1]
length(G[1])
length(G[[1]])
length(G0[[1]])
G1
G[1]
G0[1]
document()
GenotypeFreq(g1)
GenotypeFreq(g1,expect = T)
G <-GenotypeFreq(g1,expect = FALSE)
G0 <-GenotypeFreq(g1)
G[[1]]
G0[[1]]
G[1]
G0[1]
HWE.Chisq(G[[1]],G0[[1]],rescale.p=FALSE,simulate.p.value=TRUE,B=2000)
cr <- which(!G0[1]==0)
G[cr,1]
G0[cr,1]
HWE.Chisq(G[cr,1],G0[cr,1],rescale.p=FALSE,simulate.p.value=TRUE,B=2000)
?chisq.test
chisq.test(G[cr,1],G0[cr,1],rescale.p=FALSE,simulate.p.value=TRUE,B=2000)
HWE.Chisq(G,G0)
x <- data.frame(SNP1=c("A|A","T|T","A|T","A|T"),
STR1=c("12|12","13|14","13|13","14|15"))
G <- GenotypeFreq(x,expect = F)
G
G0 <- GenotypeFreq(x,expect = T)
G0
HWE.Chisq(G,G0)
x <- data.frame(SNP1=c("11|12","12|13","11|13","13|15"),
STR1=c("12|12","13|14","13|13","14|15"))
G <- GenotypeFreq(x,expect = F)
G0 <- GenotypeFreq(x,expect = T)
HWE.Chisq(G,G0)
x <- data.frame(STR1=c("11|12","12|13","11|13","13|15"),
STR2=c("12|12","13|14","13|13","14|15"),
SNP1=c("A|T","A|A","T|A","A|T"),
SNP2=c("A|A","T|T","A|T","T|A"))
G <- GenotypeFreq(x,expect = F)
G0 <- GenotypeFreq(x,expect = T)
HWE.Chisq(G,G0)
chisq.test(G[1],G0[1])
chisq.test(G[[1]],G0[[1]])
chisq.test(G[[1]],p=G0[[1]])
G0[[1]]
chisq.test(G[[1]],p=G0[[1]])
chisq.test(G[[1]],p=G0[[1]],simulate.p.value = T)
which(!G0==0)
cr<-which(!G0==0)
G[cr,1]
G
G0
cr<-which(!G0[[1]]==0)
G[cr,1]
cr
G0[[1]]
which(!G0[[1]]==0)
cr<-which(!G0[[1]]==0)
cr
G[cr,1]
G[,1]
G
G[cr,1]
chisq.test(G[cr,1],p=G0[cr,1],simulate.p.value = T)
Chi_value <-function(x,x0,simulate.p.value=TRUE,B=2000,rescale.p=FALSE){
cr<-which(!x0==0)
output <- chisq.test(x[cr],p=x0[cr],simulate.p.value = simulate.p.value,B=B,rescale.p = rescale.p)
return(output$p.value)
}
G0
G
mapply(Chi_value,G,G0,simulate.p.value=T,B=20,rescale.p=F)
document()
x <- data.frame(STR1=c("11|12","12|13","11|13","13|15"),
STR2=c("12|12","13|14","13|13","14|15"),
SNP1=c("A|T","A|A","T|A","A|T"),
SNP2=c("A|A","T|T","A|T","T|A"))
G <- GenotypeFreq(x,expect = F)
G0 <- GenotypeFreq(x,expect = T)
HWE.Chisq(G,G0)
check()
document()
check()
document()
check()
x <- data.frame(SNP1=c("A|A","T|T","A|T","A|T"),
STR1=c("12|12","13|14","13|13","14|15"))
mixIndependK(x,10,10)
ss <- nrow(x)
ss
ss <- nrow(x)
ss
p <- AlleleFreq(x,sep)
p <- AlleleFreq(x,"\\|")
p
h <- Heterozygous(x,"\\|")
H <- RxpHetero(h,p,HWE = F)
Obs_DistHetero<-FreqHetero(h)
Exp_DistHetero<-DistHetero(H)
Obs_DistHetero
Exp_DistHetero
prob<-Exp_DistHetero$Density
obs<-Obs_DistHetero$Freq
obs
Freq
prob
s<-Simulate_DistK(H,ss,t)
s
x2<-Dist_SimuChisq(s,Exp_DistHetero$Density,B)
x2<-Dist_SimuChisq(s,Exp_DistHetero$Density,20)
idx <-which(prob==0)
if (length(idx)==0){
prob <- prob
obs <- obs
}else{
prob <- prob[-idx]
obs <- obs[-idx]
}
x20 <-chisq.test(obs,p=prob,simulate.p.value = T,B=20)
P <- ecdf(x2)
1-P(x20$statistic)
document()
x <- data.frame(SNP1=c("A|A","T|T","A|T","A|T"),
STR1=c("12|12","13|14","13|13","14|15"))
mixIndependK(x,"\\|",10,10)
document()
x <- data.frame(SNP1=c("A|A","T|T","A|T","A|T"),
STR1=c("12|12","13|14","13|13","14|15"))
mixIndependK(x,10,10)
rm(mixIndependK)
mixIndependK(x,10,10)
mixIndependK(x,"\\|",10,10)
mixIndependX(x,"\\|",10,10)
n <- nrow(x)
m <- ncol(x)
n
m
d<-combn(n,2,simplify = TRUE)
b1 <- df[d[1,],]
b2 <- df[d[2,],]
a11<-matrix(sapply(strsplit(as.matrix(b1),sep),"[",1),nrow = nrow(b1),ncol=m,byrow = F)
a12<-matrix(sapply(strsplit(as.matrix(b1),sep),"[",2),nrow = nrow(b1),ncol=m,byrow = F)
a21<-matrix(sapply(strsplit(as.matrix(b2),sep),"[",1),nrow = nrow(b2),ncol=m,byrow = F)
a22<-matrix(sapply(strsplit(as.matrix(b2),sep),"[",2),nrow = nrow(b2),ncol=m,byrow = F)
b1
b1 <- df[d[1,],]
b2 <- df[d[2,],]
b1
d<-combn(n,2,simplify = TRUE)
a11<-matrix(sapply(strsplit(as.matrix(x),sep),"[",1),nrow = nrow(b1),ncol=m,byrow = F)
a11<-matrix(sapply(strsplit(as.matrix(b1),sep),"[",1),nrow = nrow(b1),ncol=m,byrow = F)
b1
b1 <- x[d[1,],]
b2 <- x[d[2,],]
b1
a11<-matrix(sapply(strsplit(as.matrix(b1),sep),"[",1),nrow = nrow(b1),ncol=m,byrow = F)
a12<-matrix(sapply(strsplit(as.matrix(b1),sep),"[",2),nrow = nrow(b1),ncol=m,byrow = F)
a21<-matrix(sapply(strsplit(as.matrix(b2),sep),"[",1),nrow = nrow(b2),ncol=m,byrow = F)
a22<-matrix(sapply(strsplit(as.matrix(b2),sep),"[",2),nrow = nrow(b2),ncol=m,byrow = F)
b2
sep <- "\\|"
a11<-matrix(sapply(strsplit(as.matrix(b1),sep),"[",1),nrow = nrow(b1),ncol=m,byrow = F)
a12<-matrix(sapply(strsplit(as.matrix(b1),sep),"[",2),nrow = nrow(b1),ncol=m,byrow = F)
a21<-matrix(sapply(strsplit(as.matrix(b2),sep),"[",1),nrow = nrow(b2),ncol=m,byrow = F)
a22<-matrix(sapply(strsplit(as.matrix(b2),sep),"[",2),nrow = nrow(b2),ncol=m,byrow = F)
a11
MAX <- data.frame(t(data.frame(a11 =as.numeric(a11),a12=as.numeric(a12),a21=as.numeric(a21),a22=as.numeric(a22))))
a11
a11 =as.numeric(a11)
as.numeric(a11)
as.vector(a11)
a11
a11<-matrix(sapply(strsplit(as.matrix(b1),sep),"[",1),nrow = nrow(b1),ncol=m,byrow = F)
a12<-matrix(sapply(strsplit(as.matrix(b1),sep),"[",2),nrow = nrow(b1),ncol=m,byrow = F)
a21<-matrix(sapply(strsplit(as.matrix(b2),sep),"[",1),nrow = nrow(b2),ncol=m,byrow = F)
a22<-matrix(sapply(strsplit(as.matrix(b2),sep),"[",2),nrow = nrow(b2),ncol=m,byrow = F)
as.vector(a11)
MAX <- data.frame(t(data.frame(a11 =as.vector(a11),a12=as.vector(a12),a21=as.vector(a21),a22=as.vector(a22))))
document()
x
AlleleShare(x)
mixIndependX(x,"\\|",10,10)
check()
document()
check()
document()
df <- data.frame(SNP1=c("A|A","T|T","A|T","A|T"),
STR1=c("12|12","13|14","13|13","14|15"))
split_Genotype(df,sep="\\|",dif="*",byrow=TRUE)
check()
build()
check()
df <- data.frame(SNP1=c("A|A","T|T","A|T","A|T"),
STR1=c("12|12","13|14","13|13","14|15"))
split_Genotype(df,sep="\\|",dif="*",byrow=TRUE)
library(usethis)
library(devtools)
library(roxygen2)
document()
check()
document()
df <- data.frame(SNP1=c("A|A","T|T","A|T","A|T"),
STR1=c("12|12","13|14","13|13","14|15"))
split_Genotype(df,sep="\\|",dif="*",byrow=TRUE)
split_Genotype(df,sep="\\|",dif="*",rowbind = TRUE)
split_Genotype(df,sep="\\|",dif="*",rowbind = F)
document()
check()
document()
check()
document()
check()
document()
check()
df <- data.frame(SNP1=c("A|A","T|T","A|T","A|T"),STR1=c("12|12","13|14","13|13","14|15"))
split_Genotype(df,sep="\\|",dif="*",rowbind = F)
split_Genotype(df,sep="\\|",dif="*",rowbind = T)
document()
document()
check()
g1
splitGenotype(g1,"\\|")
document()
document()
document()
document()
library(devtools)
library(usethis)
library(devtools)
library(roxygen2)
document()
build()
check()
devtools::check(cran = T)
document()
library(usethis)
library(devtools)
library(roxygen2)
devtools::document()
devtools::check(manual = T,cran = T,remote = F)
devtools::document()
devtools::check(manual = T,cran = T,remote = F)
devtools::document()
devtools::check(manual = T,cran = T,remote = F)
splitGenotype(g1)
devtools::document()
devtools::check(manual = T,cran = T,remote = F)
devtools::document()
devtools::check(manual = T,cran = T,remote = F)
build()
document()
devtools::check(manual = T,cran = T,remote = F)
document()
devtools::check(manual = T,cran = T,remote = F)
document()
devtools::check(manual = T,cran = T,remote = F)
release()
spell_check()
document()
spell_check()
document()
devtools::check(manual = T,cran = T,remote = F)
document()
build()
devtools::check(manual = T,cran = T,remote = F)
release()
check_rhub()
document()
document()
release()
check_win_devel()
release()
document()
build()
check(cran = T)
release()
real_all <- read.table("~/Dropbox/share/R/realdata/real_all.txt", quote="\"", comment.char="")
View(real_all)
as.vector(real_all)
as.vector(real_all$V1)
all <-as.vector(real_all$V1)
real_onlysnps <- read.table("~/Dropbox/share/R/realdata/real_onlysnps.txt", quote="\"", comment.char="")
View(real_onlysnps)
Real_SNPs <-as.vector(real_onlysnps$V1)
Real_SNPs
all-Real_SNPs
diff(all,Real_SNPs)
Real_all <-as.vector(real_all$V1)
setdiff(Real_all,Real_SNPs)
Real_STRs<-setdiff(Real_all,Real_SNPs)
Real_STRs <-setdiff(Real_all,Real_SNPs)
length(Real_all)
N<-length(Real_all)
M <- length(Real_SNPs)
Real_all[sample(1:N,100)]
Sample_Real <- data.frame(V1=Real_all[sample(1:N,100)])
Sample_Real
cat(Sample_Real)
export(Sample_Real,"/Users/ice4prince/Dropbox/share/R/realdata/ID100.txt")
write.table(Sample_Real,"/Users/ice4prince/Dropbox/share/R/realdata/ID100.txt")
installe.packages("BEDMatrix")
install.packages("BEDMatrix")
library(BEDMatrix)
Real100 <- BEDMatrix("/Users/ice4prince/Dropbox/share/R/realdata/real100_01.bed")
Real100 <- BEDMatrix("/Users/ice4prince/Dropbox/share/R/realdata/real100_01.bed")
Real100 <- as.matrix(Real100)
head(Real100)
library(usethis)
library(devtools)
library(roxygen2)
document()
document()
library(mixIndependR)
vcf <-read_vcf_gt("/Users/ice4prince/Dropbox/share/R/realdata/Real100.recode.vcf")
detach("package:BEDMatrix", unload = TRUE)
document()
document()
library(mixIndependR, lib.loc = "/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
install_github("song/mixIndependR")
install_git("https://github.com/ice4prince/mixIndependR.git")
library(mixIndependR)
vcf <-read_vcf_gt("/Users/ice4prince/Dropbox/share/R/realdata/Real100.recode.vcf")
?read_vcf_gt
library(mixIndependR)
?AlleleFreq
?read_vcf_gt
setwd("~/Dropbox/share/R/mixIndependR")
library(usethis)
setwd("~/Dropbox/share/R")
install_git("https://github.com/ice4prince/mixIndependR.git")
library(devtools)
install_git("https://github.com/ice4prince/mixIndependR.git")
library(mixIndependR)
vcf <-read_vcf_gt("/Users/ice4prince/Dropbox/share/R/realdata/Real100.recode.vcf")
?AlleleShare
?AlleleShare
library(mixIndependR)
vcf <-read_vcf_gt("/Users/ice4prince/Dropbox/share/R/realdata/Real100.recode.vcf")
library(mixIndependR)
?read_vcf_gt
vcf <-read_vcf_gt("/Users/ice4prince/Dropbox/share/R/realdata/Real100.recode.vcf")
install_git("https://github.com/ice4prince/mixIndependR.git")
library(usethis)
library(devtools)
library(roxygen2)
install_git("https://github.com/ice4prince/mixIndependR.git")
?read_vcf_gt
vcf <-read_vcf_gt("/Users/ice4prince/Dropbox/share/R/realdata/Real100.recode.vcf")
devtools::install_github("r-lib/mixIndependR")
devtools::install_github("ice4prince/mixIndependR")
read_vcf_gt
?read_vcf_gt
library(mixIndependR)
?read_vcf_gt
vcf <-read_vcf_gt("/Users/ice4prince/Dropbox/share/R/realdata/Real100.recode.vcf")
detach("package:methods", unload = TRUE)
library(mixIndependR, lib.loc = "/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
remove.packages("mixIndependR", lib="/Library/Frameworks/R.framework/Versions/4.0/Resources/library")
install_git("https://github.com/ice4prince/mixIndependR.git")
library(usethis)
library(devtools)
library(roxygen2)
install_git("https://github.com/ice4prince/mixIndependR.git")
vcf <-read_vcf_gt("/Users/ice4prince/Dropbox/share/R/realdata/Real100.recode.vcf")
setwd("~/Dropbox/share/R")
ID7413_02 <- read.table("~/Dropbox/share/R/realdata/ID7413_02.txt", quote="\"", comment.char="")
View(ID7413_02)
Real_all <-as.vector(ID7413_02$V1)
N <-length(Real_all)
replicate(10,Real_all[sample(1:N,100)])
RealSample_mt<-data.frame(replicate(10,Real_all[sample(1:N,100)]))
RealSample_mt
RealSample_mt[[1]]
write.table(RealSample_mt[[1]],"/Users/ice4prince/Dropbox/share/R/realdata/trytry.txt")
write.table(RealSample_mt,"/Users/ice4prince/Dropbox/share/R/realdata/trytry.txt")
write.csv(RealSample_mt,"/Users/ice4prince/Dropbox/share/R/realdata/ID100X10.csv")
