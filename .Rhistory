GT_DS<-vcf[,-c(1:9)]
s1<-function(x){
return(read.table(text = x,sep = ":",as.is = T)$V1)
}
GT<-sapply(GT_DS, s1)
Genotype_example <- t(GT)
colnames(Genotype_example) <- vcf$ID
Allele_Stat<-vcf[,4:5]
return(list(Genotype=as.data.frame(Genotype_example),Allele=Allele_Stat))
}
setwd("E:/R")
x0<-read_vcf_gt("E:/code/RealData/importing/real100_02.recode.vcf")
library(data.table)
x0<-read_vcf_gt("E:/code/RealData/importing/real100_02.recode.vcf")
x<-x0$Genotype
colnames(x)
markersname<-colnames(x)
?grepl]
?grepl
STR<-sapply(markersname,grepl,pattern="STR")
STR
STR<-(sapply(markersname,grepl,pattern="STR")==TRUE)
STR
STR<-which(sapply(markersname,grepl,pattern="STR")==TRUE)
STR
length(STR)
length(markersname)
SNP<-which(sapply(markersname,grepl,pattern="STR")==F)
length(SNP)
x0<-read_vcf_gt("E:/code/RealData/importing/v4.recode.vcf")
x<-x0$Genotype
v4_markersname<-colnames(x)
STR_v4<-which(sapply(v4_markersname,grepl,pattern="STR")==TRUE)
length(STR_v4)
x0<-read_vcf_gt("E:/code/RealData/importing/v6.recode.vcf")
x<-x0$Genotype
v6_markersname<-colnames(x)
STR_v6<-which(sapply(v6_markersname,grepl,pattern="STR")==TRUE)
length(STR_v6)
x8<-read_vcf_gt("E:/code/RealData/importing/v8.recode.vcf")
v6_markersname<-colnames(x8$Genotype)
STR_v8<-which(sapply(v8_markersname,grepl,pattern="STR")==TRUE)
v8_markersname<-colnames(x8$Genotype)
STR_v8<-which(sapply(v8_markersname,grepl,pattern="STR")==TRUE)
length(STR_v8)
######K and X
read.table("E:/code/RealData/pK.txt")
######K and X
read.table("E:/code/RealData/importing/pK.txt")
######K and X
pK2<- read.table("E:/code/RealData/importing/pK.txt")
length(which(pK2<0.05))
pK2<- read.table("E:/code/RealData/importing/pX.txt")
######K and X
pK2<- read.table("E:/code/RealData/importing/pK.txt")
pX2<- read.table("E:/code/RealData/importing/pX.txt")
length(which(pX2<0.05))
pK4<- read.table("E:/code/RealData/importing/pK_v4.txt")
pX4<- read.table("E:/code/RealData/importing/pX_v4.txt")
length(which(pK4<0.05))
length(which(pX4<0.05))
pK6<- read.table("E:/code/RealData/importing/pK_v6.txt")
pX6<- read.table("E:/code/RealData/importing/pX_v6.txt")
pK6<- read.table("E:/code/RealData/importing/pK_v6.txt")
pX6<- read.table("E:/code/RealData/importing/pX_v6.txt")
length(which(pK6<0.05)) ###597
length(which(pX6<0.05)) ###154
###############pairwise LD
LD <- read.table("E:/code/RealData/importing/s1v2.ld.txt",header = T)
###############pairwise LD
LD <- read.table("E:/code/RealData/importing/s1v2.ld.txt",header = T)
###############pairwise LD
LD <- read.table("E:/code/RealData/importing/s2v2.ld.txt",header = T)
length(LD$SNP_A)
length(LD)
length(LD$R2)
nrow(data.frame(table(LD$R2))
nrow(data.frame(table(LD$R2)))
nrow(data.frame(table(LD$R2)))
nrow(data.frame(table(LD$SNP_A)))
nrow(data.frame(table(LD$R2)))
LD
summary(LD$R2)
length(which(LD$R2<0.05/4950))
length(which(LD$R2<0.05/40))
###############pairwise LD
LD <- read.table("E:/code/RealData/importing/s2v4.ld.txt",header = T)
LD
length(LD$R2)
np<-nrow(data.frame(table(LD$R2)))
length(which(LD$R2<0.05/np))
###############pairwise LD
LD <- read.table("E:/code/RealData/importing/s2v6.ld.txt",header = T)
np<-nrow(data.frame(table(LD$R2)))
length(which(LD$R2<0.05/np))
###############pairwise LD
LD <- read.table("E:/code/RealData/importing/s2v8.ld.txt",header = T)
np<-nrow(data.frame(table(LD$R2)))
length(which(LD$R2<0.05/np))
length(which(LD$R2<0.05/np))/np
###############pairwise LD
LD <- read.table("E:/code/RealData/importing/s2v6.ld.txt",header = T)
np<-nrow(data.frame(table(LD$R2)))
length(which(LD$R2<0.05/np))/np
###############pairwise LD
LD <- read.table("E:/code/RealData/importing/s2v4.ld.txt",header = T)
np<-nrow(data.frame(table(LD$R2)))
length(which(LD$R2<0.05/np))/np
###############pairwise LD
LD <- read.table("E:/code/RealData/importing/s2v2.ld.txt",header = T)
np<-nrow(data.frame(table(LD$R2)))
length(which(LD$R2<0.05/np))/np
length(which(LD$R2>0.8))/np
np<-nrow(data.frame(table(LD$R2)))
###############pairwise LD
LD <- read.table("E:/code/RealData/importing/s2v4.ld.txt",header = T)
np<-nrow(data.frame(table(LD$R2)))
length(which(LD$R2>0.8))/np
###############pairwise LD
LD <- read.table("E:/code/RealData/importing/s2v6.ld.txt",header = T)
np<-nrow(data.frame(table(LD$R2)))
length(which(LD$R2>0.8))/np
###############pairwise LD
LD <- read.table("E:/code/RealData/importing/s2v8.ld.txt",header = T)
np<-nrow(data.frame(table(LD$R2)))
length(which(LD$R2>0.8))/np
@article{song_woerner_planz_2021, title={mixIndependR: a R package for statistical independence testing of loci in database of multi-locus genotypes}, volume={22}, DOI={10.1186/s12859-020-03945-0}, number={1}, journal={BMC Bioinformatics}, author={Song, Bing and Woerner, August E. and Planz, John}, year={2021}}
article{song_woerner_planz_2021, title={mixIndependR: a R package for statistical independence testing of loci in database of multi-locus genotypes}, volume={22}, DOI={10.1186/s12859-020-03945-0}, number={1}, journal={BMC Bioinformatics}, author={Song, Bing and Woerner, August E. and Planz, John}, year={2021}}
citation("adegenet")
install.packages("adegenet")
citation("adegenet")
citation()
devtools::document()
rm(list = c("read_vcf_gt"))
devtools::document()
citHeader("To cite the mixIndependR package:")
citEntry(
entry="Article",
title = "mixIndependR: a R package for statistical independence testing of loci in database of multi-locus genotypes",
journal= "BMC Bioinformatics",
year = "2021",
author = "B. Song, A. E. Woerner and J. Planz",
volume = "22",
number = "1",
doi = "10.1186/s12859-020-03945-0",
textVersion = "Song, B., A. E. Woerner and J. Planz (2021). "mixIndependR: a R package for statistical independence testing of loci in database of multi-locus genotypes." BMC Bioinformatics 22(1): 12."
)
citEntry(
entry="Article",
title = "mixIndependR: a R package for statistical independence testing of loci in database of multi-locus genotypes",
journal= "BMC Bioinformatics",
year = "2021",
author = "B. Song, A. E. Woerner and J. Planz",
volume = "22",
number = "1",
doi = "10.1186/s12859-020-03945-0",
textVersion = paste)"Song, B., A. E. Woerner and J. Planz (2021). "mixIndependR: a R package for statistical independence testing of loci in database of multi-locus genotypes." BMC Bioinformatics 22(1): 12.")
)
citEntry(
entry="Article",
title = "mixIndependR: a R package for statistical independence testing of loci in database of multi-locus genotypes",
journal= "BMC Bioinformatics",
year = "2021",
author = "B. Song, A. E. Woerner and J. Planz",
volume = "22",
number = "1",
doi = "10.1186/s12859-020-03945-0",
textVersion = paste("Song, B., A. E. Woerner and J. Planz (2021). "mixIndependR: a R package for statistical independence testing of loci in database of multi-locus genotypes." BMC Bioinformatics 22(1): 12.")
)
citEntry(
entry="Article",
title = "mixIndependR: a R package for statistical independence testing of loci in database of multi-locus genotypes",
journal= "BMC Bioinformatics",
year = "2021",
author = "B. Song, A. E. Woerner and J. Planz",
volume = "22",
number = "1",
doi = "https://doi.org/10.1186/s12859-020-03945-0",
textVersion = paste("Song, B., A. E. Woerner and J. Planz (2021). "mixIndependR: a R package for statistical independence testing of loci in database of multi-locus genotypes." BMC Bioinformatics 22(1): 12.")
)
citEntry(
entry="Article",
title = "mixIndependR: a R package for statistical independence testing of loci in database of multi-locus genotypes",
journal= "BMC Bioinformatics",
year = "2021",
author = "B. Song, A. E. Woerner and J. Planz",
volume = "22",
number = "1",
textVersion = paste("Song, B., A. E. Woerner and J. Planz (2021). "mixIndependR: a R package for statistical independence testing of loci in database of multi-locus genotypes." BMC Bioinformatics 22(1): 12.")
)
citEntry(
entry="Article",
title = "mixIndependR: a R package for statistical independence testing of loci in database of multi-locus genotypes",
journal= "BMC Bioinformatics",
year = "2021",
author = "B. Song, A. E. Woerner and J. Planz",
volume = "22",
number = "1",
doi = "10.1186/s12859-020-03945-0",
textVersion = paste("B. Song, A. E. Woerner and J. Planz (2021). "mixIndependR: a R package for statistical independence testing of loci in database of multi-locus genotypes." BMC Bioinformatics 22(1): 12.")
)
citEntry(
entry="Article",
title = "mixIndependR: a R package for statistical independence testing of loci in database of multi-locus genotypes",
journal= "BMC Bioinformatics",
year = "2021",
author = "B. Song, A. E. Woerner and J. Planz",
volume = "22",
number = "1",
doi = "10.1186/s12859-020-03945-0")
citEntry(
entry="Article",
title = "mixIndependR: a R package for statistical independence testing of loci in database of multi-locus genotypes",
journal= "BMC Bioinformatics",
year = "2021",
author = "B. Song, A. E. Woerner and J. Planz",
volume = "22",
number = "1",
doi = "10.1186/s12859-020-03945-0",
textVersion = paste("Song, B., A.E. Woerner, and J. Planz, mixIndependR: a R package for statistical independence testing of loci in database of multi-locus genotypes. BMC Bioinformatics, 2021. 22(1): p. 12."))
citEntry(
entry="Article",
title = "mixIndependR: a R package for statistical independence testing of loci in database of multi-locus genotypes",
journal= "BMC Bioinformatics",
year = "2021",
author = "B. Song, A. E. Woerner and J. Planz",
volume = "22",
number = "1",
doi = "10.1186/s12859-020-03945-0",
textVersion = paste("Song, B., A.E. Woerner, and J. Planz, mixIndependR: a R package for statistical independence testing of loci in database of multi-locus genotypes. BMC Bioinformatics, 2021. 22(1): p. 12.")
)
citHeader("To cite the mixIndependR package:")
citEntry(
entry="Article",
title = "mixIndependR: a R package for statistical independence testing of loci in database of multi-locus genotypes",
journal= "BMC Bioinformatics",
year = "2021",
author = "B. Song, A. E. Woerner and J. Planz",
volume = "22",
number = "1",
doi = "10.1186/s12859-020-03945-0",
textVersion = paste("Song, B., A.E. Woerner, and J. Planz, mixIndependR: a R package for statistical independence testing of loci in database of multi-locus genotypes. BMC Bioinformatics, 2021. 22(1): p. 12.")
)
usethis::use_citation()
install.packages("whisker")
usethis::use_citation()
install.packages(git2r)
install.packages("git2r")
usethis::use_citation()
document
devtools::document()
library(devtools)
library(usethis)
library(devtools)
library(roxygen2)
document()
build()
library(devtools)
build()
.Last.error
install.packages("evaluate")
.Last.error
build()
install.packages("htmltools")
build()
install.packages("yaml")
build()
check(cran = T)
install.packages("rcmdcheck")
check(cran = T)
devtools::document()
rm(list = c("read_vcf_gt"))
devtools::document()
library(usethis)
library(roxygen2)
build
build()
library(devtools)
document()
build()
Sys.getenv("PATH")
pkgbuild::has_build_tools()
pkgbuild::has_build_tools()
Sys.which("make")
Sys.which("make")
install.packages("jsonlite", type = "source")
library(usethis)
library(devtools)
library(roxygen2)
document()
rm(list = c("read_vcf_gt"))
document()
build()
check(cran = T)
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.getenv("PATH")
install.packages("qpdf")
build()
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
E:\qpdf-10.1.0\bin
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
library(usethis)
library(devtools)
library(roxygen2)
rm(list = c("read_vcf_gt"))
document()
build()
check(cran = T)
check(cran = T)
check_rhub()
install.packages("rematch2")
check_rhub()
check_win_devel()
release()
release()
Error in system2("git", c("rev-parse", "--abbrev-ref", "HEAD"), stdout = TRUE) :
'"git"' not found
Sys.which("git")
release()
df <- data.frame(SNP1=c("A|A","T|T","A|T","A|T"),STR1=c("12|12","13|14","13|13","14|15"))
df
library(mixIndependR)
AlleleShare(df)
df <- data.frame(SNP1=c("A|A","T|T","A|T","A|T","A|A"),STR1=c("12|12","13|14","13|13","14|15","13|13"))
df
library(mixIndependR)
AlleleShare(df,replacement = T)
df
AlleleShare(df,replacement = F)
df <- data.frame(SNP1=c("A|A","T|T","A|T","A|T","A|A","T|T"),STR1=c("12|12","13|14","13|13","14|15","13|13","12|12"))
AlleleShare(df,replacement = F)
df
AlleleShare(df,replacement = T)
AlleleShare(df,replacement = F)
df
AlleleShare(df,replacement = F)
AlleleShare(df,replacement = F)
AlleleShare(df,replacement = T)
df
package_version("mixIndependR")
packageVersion("mixIndependR")
7 %% 3
6 %% 3
9 %% 3
9 %% 2
8 %% 2
7 %% 2
d1<-sample(n,n/2,replace = FALSE)
d2<-sample(setdiff(c(1:n),d1))
b1<-df[d1,]
b2<-df[d2,]
n
n <- 5
d1<-sample(n,n/2,replace = FALSE)
d2<-sample(setdiff(c(1:n),d1))
b1<-df[d1,]
b2<-df[d2,]
b1
b2
if (n %% 2 == 1){
n <- n - 1
}
d1<-sample(n,n/2,replace = FALSE)
d2<-sample(setdiff(c(1:n),d1))
b1<-df[d1,]
b2<-df[d2,]
b2
b1
d1<-sample(n,n/2,replace = FALSE)
d2<-sample(setdiff(c(1:n),d1))
b1<-df[d1,]
b2<-df[d2,]
b1
b2
d1<-sample(n,n/2,replace = FALSE)
if (n %% 2 == 1){
d2<-sample(setdiff(c(1:n-1),d1))
}else{
d2<-sample(setdiff(c(1:n),d1))
}
n <- 5
b1<-df[d1,]
b2<-df[d2,]
b1
b2
d1<-sample(n,n/2,replace = FALSE)
if (n %% 2 == 1){
d2<-sample(setdiff(c(1:n-1),d1))
}else{
d2<-sample(setdiff(c(1:n),d1))
}
b1<-df[d1,]
b2<-df[d2,]
b2
b1
d1<-sample(n,n/2,replace = FALSE)
if (n %% 2 == 1){
d2<-sample(setdiff(c(1:n-1),d1))
}else{
d2<-sample(setdiff(c(1:n),d1))
}
b1<-df[d1,]
b2<-df[d2,]
b1
d1<-sample(n,n/2,replace = FALSE)
if (n %% 2 == 1){
d2<-sample(setdiff(c(1:n-1),d1))
}else{
d2<-sample(setdiff(c(1:n),d1))
}
b1<-df[d1,]
b2<-df[d2,]
b1
d1<-sample(n,n/2,replace = FALSE)
if (n %% 2 == 1){
d2<-sample(setdiff(c(1:n-1),d1))
}else{
d2<-sample(setdiff(c(1:n),d1))
}
d1
b1<-df[d1,]
b2<-df[d2,]
b1
b2
n <- 5
d1<-sample(n,n/2,replace = FALSE)
if (n %% 2 == 1){
d2<-sample(setdiff(c(1:n-1),d1))
}else{
d2<-sample(setdiff(c(1:n),d1))
}
d1
d2
n %% 2
c(1:n-1)
c(1:(n-1))
n <- 5
d1<-sample(n,n/2,replace = FALSE)
if (n %% 2 == 1){
d2<-sample(setdiff(c(1:(n-1)),d1))
}else{
d2<-sample(setdiff(c(1:n),d1))
}
d1
d2
d2<-sample(setdiff(c(1:(n-1)),d1))
d2
c(1:(n-1))
d1
d2
d1<-sample(n,n/2,replace = FALSE)
d2<-sample(setdiff(c(1:n),d1))
d1
d2
d2[1:n/2]
d2[1:(n/2)]
n <- 6
d1
sample(n,n/2,replace = FALSE)
d1<-sample(n,n/2,replace = FALSE)
d2<-sample(setdiff(c(1:n),d1))
b1<-df[d1,]
b2<-df[d2[1:(n/2)],]
d1
d2
b1
b2
n <- 5
d1<-sample(n,n/2,replace = FALSE)
d2<-sample(setdiff(c(1:n),d1))
b1<-df[d1,]
b2<-df[d2[1:(n/2)],]
d1
d2
b1
b2
library(usethis)
library(devtools)
library(roxygen2)
document()
df <- data.frame(SNP1=c("A|A","T|T","A|T","A|T","A|A"),STR1=c("12|12","13|14","13|13","14|15","13|13"))
AlleleShare(df,replacement = T)
AlleleShare(df,replacement = F)
AlleleShare(df,replacement = F)
AlleleShare(df,replacement = F)
AlleleShare(df,replacement = F)
AlleleShare(df,replacement = F)
AlleleShare(df,replacement = F)
AlleleShare(df,replacement = F)
AlleleShare(df,replacement = F)
AlleleShare(df,replacement = F)
AlleleShare(df,replacement = F)
?identical
build()
release()
spell_check()
spell_check()
release()
release()
check_rhub()
check_win_devel()
build()
check(cran = T)
?qpdf
?qpdf
check(cran = T)
check()
release()
