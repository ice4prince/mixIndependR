SNP_ln <- SNP_500x100_Link
SNP_ul <- SNP_500x100_unlink
SNP_ul <- SNPGenotype_500x100_Unlink
SNP_ln <- SNPGenotype_500x100_Link
SNP_ln
STR_ln <- STR_500x100_link_Diploid
STR_ul <- STR_500x100_unlink_Diploid
STR_ul$X <- SNP_ul$X
STR_ul$X
SNP_ln$ID
STR_ln$X
STR_ln$X <-SNP_ln$ID
MixPanel <-function(x,S1,S2,S3,S4){
Index1<-sample(1:100,x[2],replace = F)
Index2<-sample(1:100,x[3],replace = F)
Index3<-sample(1:100,x[4],replace = F)
Index4<-sample(1:100,x[5],replace = F)
S1 %>% select(c(1,as.vector(t(cbind(2*Index1,2*Index1+1))))) ->s1
S2 %>% select(c(1,as.vector(t(cbind(2*Index2,2*Index2+1))))) ->s2
S3 %>% select(c(1,as.vector(t(cbind(2*Index3,2*Index3+1))))) ->s3
S4 %>% select(c(1,as.vector(t(cbind(2*Index4,2*Index4+1))))) ->s4
Ln <- merge(s1,s2)
Ul <- merge(s3,s4)
return(merge(Ln,Ul))
}
SNP_ln <-
SNP_ul <-
?read.csv
?read.csv
STR_ln
SNP_ln
SNP_ln
SNP_ln <- SNPGenotype_500x100_Link
SNP_ln
STR_ul[1] <-SNP_ul$ID
STR_ul[[1]] <-SNP_ul$ID
STR_ul$X <-SNP_ul$ID
STR_ln[1] <-SNP_ln$ID
SNP_ul <- SNPGenotype_500x100_Unlink
STR_ul[1] <-SNP_ul$ID
STR_ln
names(STR_ln)
names(STR_ln)[1]
names(STR_ln)[1] <- "ID"
STR_ln[1]
names(STR_ul)[1] <- "ID"
STR_500x100_link_Diploid
STR_500x100_unlink_Diploid <- read.csv("~/Desktop/academy/HPC/STR_500x100_unlink_Diploid.csv")
View(STR_500x100_unlink_Diploid)
STR_ln <- STR_500x100_link_Diploid
STR_500x100_unlink_Diploid <- read.csv("~/Desktop/academy/HPC/STR_500x100_unlink_Diploid.csv")
View(STR_500x100_unlink_Diploid)
STR_ul <- STR_500x100_unlink_Diploid
mixIndependK<-function(x,s,t,B){
p <- AlleleFreq(x)
h <- Heterozygous(x)
H <- RxpHetero(h,p,HWE = F)
Obs_DistHetero<-FreqHetero(h)
Exp_DistHetero<-DistHetero(H)
prob<-Exp_DistHetero$Density
obs<-Obs_DistHetero$Frequency
idx <-which(prob==0)
if (length(idx)==0){
prob <- prob
obs <- obs
}else{
prob <- prob[-idx]
obs <- obs[-idx]
}
x20 <-chisq.test(obs,p=prob,simulate.p.value = T,B=B)
s<-Simulate_DistK(H,s,t)
x2<-Dist_SimuChisq(s,Exp_DistHetero$Density,B)
P <- ecdf(x2)
return(P(x20$statistic))
}
mixIndependX <- function(x,s,t,B){
AS <- AlleleShare_Table(x,replicate = F)
Obs_DistAlleleShare<-FreqAlleleShare(AS)
e <- RealProAlleleShare(AS)
Exp_DistAlleleShare <- DistAlleleShare(e)
prob<-Exp_DistAlleleShare$Density
obs<-Obs_DistAlleleShare$Frequency
idx <-which(prob==0)
if (length(idx)==0){
prob <- prob
obs <- obs
}else{
prob <- prob[-idx]
obs <- obs[-idx]
}
x20 <-chisq.test(obs,p=prob,simulate.p.value = T,B=B)
s<-Simulate_DistX(e,s,t)
x2<-Dist_SimuChisq(s,Exp_DistAlleleShare$Density,B)
P <- ecdf(x2)
return(P(x20$statistic))
}
library(dplyr)
library(beepr)
mixPanelDesign <- read.csv("~/Desktop/academy/HPC/mixPanelDesign.csv")
View(mixPanelDesign)
Nset
Partial.Linkage.Design <- read.csv("~/Desktop/academy/HPC/Partial Linkage Design.csv")
View(Partial.Linkage.Design)
#####Loops run######
for (j in 1:10){
lapply(Nset, MixPanel,S1=SNP_ln,S2=STR_ln,S3=SNP_ul,S4=STR_ul) -> Panels_mix
for (i in 7:18){
x <- Panels_mix[[i]][-1]
K[i,j]<-mixIndependK(x,500,100,100)
X[i,j]<-mixIndependX(x,250,100,100)
print(paste(i,"case",j,"-th run"))
}
print(paste(j,"-th run complete!"))
beep()
}
beep(3)
####Debug#########
lapply(Nset, MixPanel,S1=SNP_ln,S2=STR_ln,S3=SNP_ul,S4=STR_ul) -> Panels_mix
MixPanel
Nset
Nset[1]
####Debug#########
lapply(Nset, MixPanel,S1=SNP_ln,S2=STR_ln,S3=SNP_ul,S4=STR_ul) -> Panels_mix
MixPanel(Nset,SNP_ln,STR_ln,SNP_ul,STR_ul)
MixPanel(Nset[1],SNP_ln,STR_ln,SNP_ul,STR_ul)
MixPanel(Nset[1],SNP_ln,STR_ln,SNP_ul,STR_ul)
typeof(Nset)
Nset<-data.frame(Nset)
MixPanel(Nset[1],SNP_ln,STR_ln,SNP_ul,STR_ul)
Nset[1]
Nset[[1]]
Index1<-sample(1:100,Nset[[1]][2],replace = F)
Index2<-sample(1:100,Nset[[1]][3],replace = F)
Index3<-sample(1:100,Nset[[1]][4],replace = F)
Index4<-sample(1:100,Nset[[1]][5],replace = F)
S1 %>% select(c(1,as.vector(t(cbind(2*Index1,2*Index1+1))))) ->s1
SNP_ln %>% select(c(1,as.vector(t(cbind(2*Index1,2*Index1+1))))) ->s1
STR_ln %>% select(c(1,as.vector(t(cbind(2*Index2,2*Index2+1))))) ->s2
SNP_ul %>% select(c(1,as.vector(t(cbind(2*Index3,2*Index3+1))))) ->s3
SNP_ul
SNP_ln
SNP_500x100_Link <- read.csv("~/Desktop/academy/HPC/SNP_500x100_Link.csv")
View(SNP_500x100_Link)
SNP_500x100_unlink <- read.csv("~/Desktop/academy/HPC/SNP_500x100_unlink.csv")
View(SNP_500x100_unlink)
SNP_ln <- read.csv("~/Desktop/academy/HPC/SNP_500x100_Link.csv")
SNP_ul <- read.csv("~/Desktop/academy/HPC/SNP_500x100_unlink.csv")
#####Loops run######
for (j in 1:10){
lapply(Nset, MixPanel,S1=SNP_ln,S2=STR_ln,S3=SNP_ul,S4=STR_ul) -> Panels_mix
for (i in 7:18){
x <- Panels_mix[[i]][-1]
K[i,j]<-mixIndependK(x,500,100,100)
X[i,j]<-mixIndependX(x,250,100,100)
print(paste(i,"case",j,"-th run"))
}
print(paste(j,"-th run complete!"))
beep()
}
beep(3)
Panels_mix
counta(c(0,1,3,4,4,2),0)
counta(c(0,1,3,4,4,2),5)
####Debug#########
lapply(Nset, MixPanel,S1=SNP_ln,S2=STR_ln,S3=SNP_ul,S4=STR_ul) -> Panels_mix
Panels_mix
Nset
lapply(Nset,mean)
Nset$X1
MixPanel(Nset[1],SNP_ln,STR_ln,SNP_ul,STR_ul)
Q
MixPanel(Nset[[1]],SNP_ln,STR_ln,SNP_ul,STR_ul)
SNP_ln
STR_ln
#####Loops run######
K <- mat.or.vec(129,1000)
X <- mat.or.vec(129,1000)
SNP_ln
SNP_ln[1]
SNP_500x100_Link <- read.csv("~/Desktop/academy/HPC/SNP_500x100_Link.csv")
View(SNP_500x100_Link)
SNP_ln <- SNP_500x100_Link
for (j in 1:10){
lapply(Nset, MixPanel,S1=SNP_ln,S2=STR_ln,S3=SNP_ul,S4=STR_ul) -> Panels_mix
for (i in 7:18){
x <- Panels_mix[[i]][-1]
K[i,j]<-mixIndependK(x,500,100,100)
X[i,j]<-mixIndependX(x,250,100,100)
print(paste(i,"case",j,"-th run"))
}
print(paste(j,"-th run complete!"))
beep()
}
for (j in 1:10){
lapply(Nset, MixPanel,S1=SNP_ln,S2=STR_ln,S3=SNP_ul,S4=STR_ul) -> Panels_mix
for (i in 124:129){
x <- Panels_mix[[i]][-1]
K[i,j]<-mixIndependK(x,500,100,100)
X[i,j]<-mixIndependX(x,250,100,100)
print(paste(i,"case",j,"-th run"))
}
print(paste(j,"-th run complete!"))
beep()
}
MixPanel
lapply(Nset, MixPanel,S1=SNP_ln,S2=STR_ln,S3=SNP_ul,S4=STR_ul) -> Panels_mix
SNP_ln
STR_ln
STR_500x100_link_Diploid <- read.csv("~/Desktop/academy/HPC/STR_500x100_link_Diploid.csv")
View(STR_500x100_link_Diploid)
STR_ln <- STR_500x100_link_Diploid
STR_ln
SNP_ul
STR_ul
lapply(Nset, MixPanel,S1=SNP_ln,S2=STR_ln,S3=SNP_ul,S4=STR_ul) -> Panels_mix
Panels_mix
for (j in 1:10){
lapply(Nset, MixPanel,S1=SNP_ln,S2=STR_ln,S3=SNP_ul,S4=STR_ul) -> Panels_mix
for (i in 124:129){
x <- Panels_mix[[i]][-1]
K[i,j]<-mixIndependK(x,500,100,100)
X[i,j]<-mixIndependX(x,250,100,100)
print(paste(i,"case",j,"-th run"))
}
print(paste(j,"-th run complete!"))
beep()
}
Nset <- read.csv("~/mixSimulation_202009/mixPanelDesign.csv",row.names = 1)
for (j in 1:2){
lapply(Nset, MixPanel,S1=SNP_ln,S2=STR_ln,S3=SNP_ul,S4=STR_ul) -> Panels_mix
for (i in 37:60){
x <- Panels_mix[[i]][-1]
K[i,j]<-mixIndependK(x,500,100,100)
X[i,j]<-mixIndependX(x,250,100,100)
print(paste(i,"case",j,"-th run"))
}
print(paste(j,"-th run complete!"))
}
Q
####Debug#########
lapply(Nset, MixPanel,S1=SNP_ln,S2=STR_ln,S3=SNP_ul,S4=STR_ul) -> Panels_mix
Panels_mix[37][-1]
Panels_mix[[27]][-1]
Panels_mix[[37]][-1]
Panels_mix[[38]][-1]
Panels_mix[[39]][-1]
Panels_mix[[39]]
head(Panels_mix[[39]][,-1])
for (i in 37:60){
x <- Panels_mix[[i]][,-1]
K[i,j]<-mixIndependK(x,50,10,10)
X[i,j]<-mixIndependX(x,25,10,10)
print(paste(i,"case",j,"-th run"))
}
j <- 1
Panels_mix[[48]]
Panels_mix[[47]]
Panels_mix[[49]]
Panels_mix[[49]]
####Debug#########
lapply(Nset, MixPanel,S1=SNP_ln,S2=STR_ln,S3=SNP_ul,S4=STR_ul) -> Panels_mix
Panels_mix[[49]]
####Debug#########
lapply(Nset, MixPanel,S1=SNP_ln,S2=STR_ln,S3=SNP_ul,S4=STR_ul) -> Panels_mix
Panels_mix[[49]]
x <- Panels_mix[[37]][,-1]
x
head(x)
library(mixIndependR)
?Prop_Pvalue
?counta
?Prop_Pvalue
install_git("https://github.com/ice4prince/mixIndependR.git")
library(usethis)
library(devtools)
library(roxygen2)
install_git("https://github.com/ice4prince/mixIndependR.git")
library(mixIndependR)
?read_vcf_gt
?AlleleShare
rm(c(mixIndependK,mixIndependX()))
rm(c(mixIndependK,mixIndependX))
rm(mixIndependK))
rm(mixIndependK)
rm(mixIndependX)
?mixIndependK
vcf <-read_vcf_gt("/Users/ice4prince/Dropbox/share/R/realdata/Real100.recode.vcf")
library(mixIndependR)
vcf <-read_vcf_gt("/Users/ice4prince/Dropbox/share/R/realdata/v4.recode.vcf")
setwd("~/Dropbox/share/R/mixIndependR")
read_vcf_gt <- function(x){
vcf <- fread(x)
GT_DS<-vcf[,-c(1:9)]
s1<-function(x){
return(read.table(text = x,sep = ":",as.is = T)$V1)
}
GT<-sapply(GT_DS, s1)
Genotype_example <- t(GT)
colnames(Genotype_example) <- vcf$ID
Allele_Stat<-vcf[,4:5]
return(list(Genotype=as.data.frame(Genotype_example),Allele=Allele_Stat))
}
library(usethis)
library(data.table)
read_vcf_gt <- function(x){
vcf <- fread(x)
GT_DS<-vcf[,-c(1:9)]
s1<-function(x){
return(read.table(text = x,sep = ":",as.is = T)$V1)
}
GT<-sapply(GT_DS, s1)
Genotype_example <- t(GT)
colnames(Genotype_example) <- vcf$ID
Allele_Stat<-vcf[,4:5]
return(list(Genotype=as.data.frame(Genotype_example),Allele=Allele_Stat))
}
vcf <-read_vcf_gt("/Users/ice4prince/Dropbox/share/R/realdata/v4.recode.vcf")
x0 <- vcf$Genotype
dim(x0)
x<- x0[sample(1:4878,100)]
dim(x)
OneRunK <-function(x0){
x<- x0[sample(1:4878,100)]
return(mixIndependK(x,"\\|",100,100))
}
OneRunX <-function(x0){
x<- x0[sample(1:4878,100)]
return(mixIndependX(x,"\\|",100,100))
}
pK_v4 <- pbreplicate(1000,OneRunK(x0))
library(pbapply)
pK_v4 <- pbreplicate(1000,OneRunK(x0))
pX_v4 <- pbreplicate(1000,OneRunX(x0))
write.table(pK,"/Users/ice4prince/Dropbox/share/R/realdata/pK_v4.txt")
write.table(pX,"/Users/ice4prince/Dropbox/share/R/realdata/pX_v4.txt")
write.table(pK_v4,"/Users/ice4prince/Dropbox/share/R/realdata/pK_v4.txt")
write.table(pX_v4,"/Users/ice4prince/Dropbox/share/R/realdata/pX_v4.txt")
length(which(pK_v4<0.05))/1000
length(which(pX_v4<0.05))/1000
vcf <-read_vcf_gt("/Users/ice4prince/Dropbox/share/R/realdata/v6.recode.vcf")
x0 <- vcf$Genotype
dim(x0)
OneRunK <-function(x0){
x<- x0[sample(1:4885,100)]
return(mixIndependK(x,"\\|",100,100))
}
OneRunX <-function(x0){
x<- x0[sample(1:4885,100)]
return(mixIndependX(x,"\\|",100,100))
}
pK_v6 <- pbreplicate(1000,OneRunK(x0))
pX_v6 <- pbreplicate(1000,OneRunX(x0))
write.table(pK_v6,"/Users/ice4prince/Dropbox/share/R/realdata/pK_v6.txt")
write.table(pX_v6,"/Users/ice4prince/Dropbox/share/R/realdata/pX_v6.txt")
vcf <-read_vcf_gt("/Users/ice4prince/Dropbox/share/R/realdata/v8.recode.vcf")
dim(vcf$Genotype)
OneRunK <-function(x0){
x<- x0[sample(1:6984,100)]
return(mixIndependK(x,"\\|",100,100))
}
OneRunX <-function(x0){
x<- x0[sample(1:6984,100)]
return(mixIndependX(x,"\\|",100,100))
}
pK_v8 <- pbreplicate(1000,OneRunK(x0))
pX_v8 <- pbreplicate(1000,OneRunX(x0))
x0<-vcf$Genotype
pK_v8 <- pbreplicate(1000,OneRunK(x0))
pX_v8 <- pbreplicate(1000,OneRunX(x0))
dim(x)
x0<-vcf$Genotype
dim(x0)
vcf <-read_vcf_gt("/Users/ice4prince/Dropbox/share/R/realdata/v8.recode.vcf")
x0<-vcf$Genotype
dim(x0)
pK_v8 <- pbreplicate(1000,OneRunK(x0))
pX_v8 <- pbreplicate(1000,OneRunX(x0))
write.table(pK_v8,"/Users/ice4prince/Dropbox/share/R/realdata/pK_v8.txt")
write.table(pX_v8,"/Users/ice4prince/Dropbox/share/R/realdata/pX_v8.txt")
library(usethis)
library(devtools)
library()
library(roxygen2)
document()
rm(list = c("read_vcf_gt"))
document()
vcf <-read_vcf_gt("/Users/ice4prince/Dropbox/share/R/realdata/ld/v2_22.recode.vcf")
x0 <- vcf$Genotype
x0
dim(x0)
x<- x0[sample(1:2067,100)]
dim(x)
pK01_v2 <-mixIndependK(x,100,100)
library(beepr)
beep(3)
pK01_v2 <-mixIndependK(x,100,100)
pK01_v2 <-mixIndependK(x,100,100)
beep(3)
warnings()
####debug mixIndependK######
ss <- nrow(x)
ss
####debug mixIndependK######
ss <- nrow(x)
ss
p <- AlleleFreq(x,sep)
p <- AlleleFreq(x)
p <- AlleleFreq(x)
h <- Heterozygous(x)
pK01_v2 <-mixIndependK(x,"\\|",100,100)
beep(3)
document()
pK01_v2 <-mixIndependK(x,"\\|",100,100)
beep(3)
pK01_v2
x<- x0[sample(1:2067,100)]
pK01_v2 <-mixIndependK(x,"\\|",100,100)
beep(3)
pK01_v2
x<- x0[sample(1:2067,100)]
pK01_v2 <-mixIndependK(x,"\\|",100,100)
pK01_v2
x<- x0[sample(1:2067,100)]
pK01_v2 <-mixIndependK(x,"\\|",100,100)
pK01_v2
beep(3)
x<- x0[sample(1:2067,1000)]
dim(x)
pK01_v2 <-mixIndependK(x,"\\|",100,100)
pK01_v2
beep(3)
x<- x0[sample(1:2067,1000)]
pK01_v2 <-mixIndependK(x,"\\|",100,100)
pK01_v2
beep(3)
pK01_v2 <-mixIndependK(x,"\\|",100,100)
x<- x0[sample(1:2067,1000)]
pK01_v2 <-mixIndependK(x,"\\|",100,100)
pK01_v2
beep(3)
x<- x0[sample(1:2067,100)]
pK01_v2 <-mixIndependK(x,"\\|",100,100)
pK01_v2
beep(3)
all_v2.ld <- read.csv("~/Dropbox/share/R/realdata/ld/all_v2.ld.txt", sep="")
View(all_v2.ld)
all_v2.ld
all_v2.ld$R2
boxplot(all_v2.ld$R2)
length(all_v2.ld$R2)
summary(all_v2.ld$R2)
r2_v2 <- all_v2.ld$R2
boxplot(r2_v2[which(r2_v2<0.2)])
length(all_v2.ld$R2)
length(which(r2_v2>0.8))/length(all_v2.ld$R2)
length(which(r2_v2<0.2))/length(all_v2.ld$R2)
hist(r2_v2)
all_v4.ld <- read.csv("~/Dropbox/share/R/realdata/ld/all_v4.ld.txt", sep="")
View(all_v4.ld)
all_v6.ld <- read.csv("~/Dropbox/share/R/realdata/ld/all_v6.ld.txt", sep="")
View(all_v6.ld)
all_v8.ld <- read.csv("~/Dropbox/share/R/realdata/ld/all_v8.ld.txt", sep="")
View(all_v8.ld)
r2 <-data.frame("0.2"=all_v2.ld$R2,"0.4"=all_v4.ld$R2,"0.6"=all_v6.ld$R2,"0.8"=all_v8.ld$R2)
r2 <- list("0.2"=all_v2.ld$R2,"0.4"=all_v4.ld$R2,"0.6"=all_v6.ld$R2,"0.8"=all_v8.ld$R2)
sapply(r2, function(x){length(length(which(x<0.2))/length(x))})
r2
length(which(r2_v2<0.2))/length(all_v2.ld$R2)
sapply(r2, function(x){length(length(which(x<0.2))/length(x))})
length(which(r2_v2<0.2))/length(r2_v2)
sapply(r2, function(x){length(which(x<0.2))/length(x)})
sapply(r2, function(x){length(which(x>0.8))/length(x)})
sapply(r2, function(x){length(which(x>0.5))/length(x)})
sapply(r2, function(x){length(which(x>0.2))/length(x)})
vcf <-read_vcf_gt("/Users/ice4prince/Dropbox/share/R/realdata/ld/v2_22.recode.vcf")
x0 <- vcf$Genotype
x0
dim(x0)
x<- x0[sample(1:2067,1000)]
library(pbapply)
OneRunK <-function(x0){
x<- x0[sample(1:2067,100)]
return(mixIndependK(x,"\\|",2504,100))
}
OneRunX <-function(x0){
x<- x0[sample(1:2067,100)]
return(mixIndependX(x,"\\|",1252,100))
}
###############
library(pbapply)
pK2_v2 <- pbreplicate(1000,OneRunK(x0))
pX2_v2 <- pbreplicate(1000,OneRunX(x0))
write.table(pK_v2,"/Users/ice4prince/Dropbox/share/R/realdata/pK2_v2.txt")
write.table(pK2_v2,"/Users/ice4prince/Dropbox/share/R/realdata/pK2_v2.txt")
write.table(pX2_v2,"/Users/ice4prince/Dropbox/share/R/realdata/pX2_v2.txt")
pK2_v2 <- pbreplicate(1000,OneRunK(x0))
pX2_v2 <- pbreplicate(1000,OneRunX(x0))
write.table(pK2_v2,"/Users/ice4prince/Dropbox/share/R/realdata/pK2_v2.txt")
write.table(pX2_v2,"/Users/ice4prince/Dropbox/share/R/realdata/pX2_v2.txt")
OneRunK <-function(x0){
x<- x0[sample(1:2067,100)]
return(mixIndependK(x,"\\|",100,100))
}
OneRunX <-function(x0){
x<- x0[sample(1:2067,100)]
return(mixIndependX(x,"\\|",100,100))
}
pK2_v2 <- pbreplicate(1000,OneRunK(x0))
pX2_v2 <- pbreplicate(1000,OneRunX(x0))
write.table(pK2_v2,"/Users/ice4prince/Dropbox/share/R/realdata/pK2_v2.txt")
write.table(pX2_v2,"/Users/ice4prince/Dropbox/share/R/realdata/pX2_v2.txt")
document()
